{"version":3,"file":"static/js/2585.4743ca73.chunk.js","mappings":"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","sources":["helpers/number.ts","models/unitConverter.ts","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["export function toNumber(x: any) {\n  return +x;\n}\n\nexport function round(num: number | string, fractionDigits: number = 2) {\n  return toNumber(toNumber(num).toFixed(fractionDigits));\n}\n","import {\n  T_ConversionRates,\n  T_FavoriteCodes,\n  T_FavoritesWithValue\n} from \"components/UnitConverter/types\";\nimport { round, toNumber } from \"helpers/number\";\nimport { T_StringOrNumber } from \"types/common\";\nimport { T_ConversionFormulas } from \"types/tools/unitConverter\";\n\nexport function sanitizeNumericInput(value: string) {\n  return (\n    value\n      // allow only numbers (with/without decimal values)\n      .replace(/[^0-9.]/g, \"\")\n      // allow only one decimal\n      .replace(/(\\..*?)\\..*/g, \"$1\")\n      // allow leading zero only for decimal values\n      .replace(/^0(\\d)/, \"$1\")\n  );\n}\n\nexport function getDefaultFavorites(\n  favoriteCodes: T_FavoriteCodes\n): T_FavoritesWithValue {\n  return favoriteCodes.map((code) => ({ code, value: \"\" }));\n}\n\nexport function calcValueForFavorites({\n  favorites,\n  conversionRates,\n  conversionFormulas,\n  inputCode,\n  inputValue\n}: T_CalcValueForFavoritesFnParams): T_FavoritesWithValue {\n  return favorites.map((favItem) => ({\n    ...favItem,\n    value: calcValue({\n      conversionRates,\n      conversionFormulas,\n      inputCode,\n      targetCode: favItem.code,\n      inputValue\n    })\n  }));\n}\n\nexport function calcValue({\n  conversionRates,\n  conversionFormulas,\n  inputCode,\n  targetCode,\n  inputValue\n}: T_CalcValueFnParams): T_StringOrNumber {\n  if (conversionFormulas) {\n    return calcValueBasedOnFormula({\n      conversionFormulas,\n      inputCode,\n      targetCode,\n      inputValue\n    });\n  } else if (conversionRates) {\n    return calcValueBasedOnRatio({\n      conversionRates,\n      inputCode,\n      targetCode,\n      inputValue\n    });\n  } else {\n    return inputValue;\n  }\n}\n\n/**\n * Assume:\n *    base code (of master data): BBB\n *    input code: CCC\n *    input value: x\n *    target code: YYY\n *\n * and we know (from master data):\n *    1 BBB = n1 CCC\n *    1 BBB = n2 YYY\n *\n * then,\n *               1 CCC  =  (1 / n1) BBB\n *               x CCC  =  x * (1 / n1) BBB\n *    x * (1 / n1) BBB  =  n2 * x * (1 / n1) YYY\n *               x CCC  =  n2 * x * / n1 YYY\n */\nfunction calcValueBasedOnRatio({\n  conversionRates,\n  inputCode,\n  targetCode,\n  inputValue\n}: { conversionRates: T_ConversionRates } & T_CalcValueFnParams) {\n  const x = toNumber(inputValue);\n  const n1 = conversionRates[inputCode];\n  const n2 = conversionRates[targetCode];\n\n  return round((n2 * x) / n1);\n}\n\nfunction calcValueBasedOnFormula({\n  conversionFormulas,\n  inputCode,\n  targetCode,\n  inputValue\n}: { conversionFormulas: T_ConversionFormulas } & T_CalcValueFnParams) {\n  let targetValue: T_StringOrNumber = 0;\n\n  if (inputCode === conversionFormulas.baseUnitCode) {\n    return conversionFormulas.fromBaseTo[targetCode](inputValue);\n  }\n\n  targetValue = conversionFormulas.toBaseFrom[inputCode](inputValue);\n\n  if (targetCode === conversionFormulas.baseUnitCode) {\n    return targetValue;\n  } else {\n    return conversionFormulas.fromBaseTo[targetCode](targetValue);\n  }\n}\n\ntype T_CalcValueForFavoritesFnParams = Omit<\n  T_CalcValueFnParams,\n  \"targetCode\"\n> & {\n  favorites: T_FavoritesWithValue;\n};\n\ntype T_CalcValueFnParams = {\n  inputCode: string;\n  targetCode: string;\n  inputValue: T_StringOrNumber;\n  conversionRates?: T_ConversionRates;\n  conversionFormulas?: T_ConversionFormulas;\n};\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["toNumber","x","round","num","fractionDigits","toFixed","sanitizeNumericInput","value","replace","getDefaultFavorites","favoriteCodes","map","code","calcValueForFavorites","favorites","conversionRates","conversionFormulas","inputCode","inputValue","favItem","calcValue","targetCode","targetValue","baseUnitCode","fromBaseTo","toBaseFrom","calcValueBasedOnFormula","n1","n2","calcValueBasedOnRatio","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}