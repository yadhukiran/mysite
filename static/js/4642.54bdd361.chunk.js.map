{"version":3,"file":"static/js/4642.54bdd361.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/UnitConverter/hooks.ts","components/UnitConverter/types.ts","constants/tools/unitConverter.ts","helpers/number.ts","helpers/pageCache.ts","helpers/webStorage.ts","models/unitConverter.ts","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useMemo, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nimport PageCache from \"helpers/pageCache\";\nimport {\n  sanitizeNumericInput,\n  getDefaultFavorites,\n  calcValue,\n  calcValueForFavorites\n} from \"models/unitConverter\";\nimport * as CONST_UNIT_CONVERTER from \"constants/tools/unitConverter\";\nimport {\n  E_PageCacheKeys,\n  E_UnitConverterActions,\n  T_FavoriteCodes,\n  T_UnitConverterAction,\n  T_UnitConverterConversionLogicProps,\n  T_UnitConverterPropsDefaults,\n  T_UnitConverterState\n} from \"./types\";\n\nexport function useElementHandlers(\n  dispatch: React.Dispatch<T_UnitConverterAction>,\n  pageCache: PageCache\n) {\n  const inputValueEl = useRef<HTMLInputElement>(null);\n  const targetValueEl = useRef<HTMLInputElement>(null);\n\n  const eventHandlers = useMemo(() => {\n    const handleInputValueChange = (\n      event: React.ChangeEvent<HTMLInputElement>\n    ) => dispatch([E_UnitConverterActions.setInputValue, event.target.value]);\n    const handleTargetValueChange = (\n      event: React.ChangeEvent<HTMLInputElement>\n    ) => dispatch([E_UnitConverterActions.setTargetValue, event.target.value]);\n    const handleListItemAction = (\n      event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n    ) => {\n      const { code, actionName } = event.currentTarget.dataset;\n      if (code && actionName) {\n        switch (\n          actionName as unknown as CONST_UNIT_CONVERTER.E_UnitConverterListItemActions\n        ) {\n          case CONST_UNIT_CONVERTER.E_UnitConverterListItemActions.input: {\n            pageCache.set(E_PageCacheKeys.inputCode, code);\n            dispatch([E_UnitConverterActions.setInputCode, code]);\n            inputValueEl.current?.focus();\n            return;\n          }\n          case CONST_UNIT_CONVERTER.E_UnitConverterListItemActions.target: {\n            pageCache.set(E_PageCacheKeys.targetCode, code);\n            dispatch([E_UnitConverterActions.setTargetCode, code]);\n            targetValueEl.current?.focus();\n            return;\n          }\n          default:\n            return;\n        }\n      }\n    };\n    const handleInputTargetCodeSwapClick = (\n      inputCode: string,\n      targetCode: string\n    ) => {\n      pageCache.set(E_PageCacheKeys.inputCode, targetCode);\n      pageCache.set(E_PageCacheKeys.targetCode, inputCode);\n      dispatch([E_UnitConverterActions.swapInputTargetCode]);\n      inputValueEl.current?.focus();\n    };\n    const handleInputClearClick = () => {\n      dispatch([E_UnitConverterActions.setInputValue, \"\"]);\n      inputValueEl.current?.focus();\n    };\n    const handleTargetClearClick = () => {\n      dispatch([E_UnitConverterActions.setTargetValue, \"\"]);\n      targetValueEl.current?.focus();\n    };\n\n    return {\n      handleInputValueChange,\n      handleTargetValueChange,\n      handleListItemAction,\n      handleInputClearClick,\n      handleTargetClearClick,\n      handleInputTargetCodeSwapClick\n    };\n  }, [dispatch, pageCache]);\n\n  return {\n    inputValueEl,\n    targetValueEl,\n    ...eventHandlers\n  };\n}\n\nexport function useDefaults(defaults: T_UnitConverterPropsDefaults) {\n  const location = useLocation();\n\n  return useMemo(() => {\n    const pageCache = new PageCache(location.pathname);\n    return {\n      inputCode:\n        pageCache.get<string>(E_PageCacheKeys.inputCode) || defaults.inputCode,\n      targetCode:\n        pageCache.get<string>(E_PageCacheKeys.targetCode) ||\n        defaults.targetCode,\n      favorites: getDefaultFavorites(\n        (pageCache.get(E_PageCacheKeys.favoriteCodes) as T_FavoriteCodes) ||\n          defaults.favoriteCodes\n      ),\n      pageCache\n    };\n  }, [location, defaults]);\n}\n\nexport function createReducer(props: T_UnitConverterConversionLogicProps) {\n  return (\n    state: T_UnitConverterState,\n    [type, payload]: T_UnitConverterAction\n  ) => {\n    if (!props.conversionRates && !props.conversionFormulas) {\n      return state;\n    }\n\n    const conversionLogicProps = {\n      conversionRates: props.conversionRates,\n      conversionFormulas: props.conversionFormulas\n    };\n\n    switch (type) {\n      case E_UnitConverterActions.setInputCode: {\n        return {\n          ...state,\n          inputCode: payload,\n          targetValue: calcValue({\n            ...conversionLogicProps,\n            inputCode: payload,\n            targetCode: state.targetCode,\n            inputValue: state.inputValue\n          }),\n          favorites: calcValueForFavorites({\n            ...conversionLogicProps,\n            favorites: state.favorites,\n            inputCode: payload,\n            inputValue: state.inputValue\n          })\n        };\n      }\n\n      case E_UnitConverterActions.setTargetCode: {\n        const newInputValue = calcValue({\n          ...conversionLogicProps,\n          inputCode: payload,\n          targetCode: state.inputCode,\n          inputValue: state.targetValue\n        });\n\n        return {\n          ...state,\n          targetCode: payload,\n          inputValue: newInputValue,\n          favorites: calcValueForFavorites({\n            ...conversionLogicProps,\n            favorites: state.favorites,\n            inputCode: state.inputCode,\n            inputValue: newInputValue\n          })\n        };\n      }\n\n      case E_UnitConverterActions.swapInputTargetCode: {\n        return {\n          ...state,\n          inputCode: state.targetCode,\n          targetCode: state.inputCode,\n          inputValue: state.targetValue,\n          targetValue: state.inputValue\n        };\n      }\n\n      case E_UnitConverterActions.setInputValue: {\n        const sanitizedInputValue = sanitizeNumericInput(payload);\n\n        // Avoid state update (and re-render) if there is no change\n        if (sanitizedInputValue === state.inputValue) {\n          return state;\n        }\n\n        return {\n          ...state,\n          inputValue: sanitizedInputValue,\n          targetValue: calcValue({\n            ...conversionLogicProps,\n            inputCode: state.inputCode,\n            targetCode: state.targetCode,\n            inputValue: sanitizedInputValue\n          }),\n          favorites: calcValueForFavorites({\n            ...conversionLogicProps,\n            favorites: state.favorites,\n            inputCode: state.inputCode,\n            inputValue: sanitizedInputValue\n          })\n        };\n      }\n\n      case E_UnitConverterActions.setTargetValue: {\n        const sanitizedTargetValue = sanitizeNumericInput(payload);\n\n        // Avoid state update (and re-render) if there is no change\n        if (sanitizedTargetValue === state.targetValue) {\n          return state;\n        }\n\n        const newInputValue = calcValue({\n          ...conversionLogicProps,\n          inputCode: state.targetCode,\n          targetCode: state.inputCode,\n          inputValue: sanitizedTargetValue\n        });\n\n        return {\n          ...state,\n          inputValue: newInputValue,\n          targetValue: sanitizedTargetValue,\n          favorites: calcValueForFavorites({\n            ...conversionLogicProps,\n            favorites: state.favorites,\n            inputCode: state.inputCode,\n            inputValue: newInputValue\n          })\n        };\n      }\n\n      case E_UnitConverterActions.toggleFavorite: {\n        const favoritesArrWithoutPayloadItem = state.favorites.filter(\n          (favItem) => favItem.code !== payload\n        );\n\n        // Check if the filtering resulted in a smaller array than state.favorites\n        if (favoritesArrWithoutPayloadItem.length < state.favorites.length) {\n          // This means that the supplied item already existed in state.favorites\n          // and we just obtained an array after removing it.\n          return {\n            ...state,\n            favorites: favoritesArrWithoutPayloadItem\n          };\n        }\n\n        // Otherwise it means that payload item is a new item to be favorited\n        return {\n          ...state,\n          favorites: [...state.favorites, payload]\n        };\n      }\n      default:\n        return state;\n    }\n  };\n}\n","import React from \"react\";\nimport {\n  T_ConversionFormulas,\n  T_UnitConversionAllUnitsMap\n} from \"types/tools/unitConverter\";\nimport { T_Object } from \"types/generic\";\nimport { T_StringOrNumber } from \"types/common\";\n\nexport const enum E_PageCacheKeys {\n  inputCode = \"inputCode\",\n  targetCode = \"targetCode\",\n  favoriteCodes = \"favoriteCodes\"\n}\n\nexport const enum E_UnitConverterActions {\n  setInputCode,\n  setTargetCode,\n  setInputValue,\n  setTargetValue,\n  swapInputTargetCode,\n  toggleFavorite\n}\n\nexport type T_ConverionRateAPIFn = (...args: any[]) => Promise<\n  | {\n      conversionRates: T_ConversionRates;\n    }\n  | undefined\n  | null\n>;\n\nexport type T_UnitConverterPropsDefaults = {\n  inputCode: string;\n  targetCode: string;\n  favoriteCodes: T_FavoriteCodes;\n};\n\nexport type T_UnitConverterConversionLogicProps = {\n  conversionRates?: T_ConversionRates;\n  conversionFormulas?: T_ConversionFormulas;\n};\n\nexport type T_UnitConverterProps = {\n  allUnitsMap: T_UnitConversionAllUnitsMap;\n  defaults: T_UnitConverterPropsDefaults;\n  UnitIconComponent?: React.ComponentType<{\n    code: string;\n    wrapperClassName?: string;\n    iconClassName?: string;\n  }>;\n} & T_UnitConverterConversionLogicProps;\n\nexport type T_FavoriteItemWithValue = {\n  code: string;\n  value: T_StringOrNumber;\n};\n\nexport type T_FavoriteCodes = string[];\n\nexport type T_FavoritesWithValue = T_FavoriteItemWithValue[];\n\nexport type T_ConversionRates = T_Object<number>;\n\nexport type T_UnitConverterAction = [\n  type: E_UnitConverterActions,\n  payload?: any\n];\n\nexport type T_UnitConverterState = {\n  inputCode: string;\n  targetCode: string;\n  favorites: T_FavoritesWithValue;\n  inputValue: string | number;\n  targetValue: string | number;\n};\n","export const enum E_UnitConverterListItemActions {\n  input = \"INPUT\",\n  target = \"TARGET\"\n}\n","export function toNumber(x: any) {\n  return +x;\n}\n\nexport function round(num: number | string, fractionDigits: number = 2) {\n  return toNumber(toNumber(num).toFixed(fractionDigits));\n}\n","import { LocalStorage } from \"helpers/webStorage\";\n\nexport default class PageCache {\n  keyPrefix: string;\n  cachedKeys: string[] = [];\n\n  constructor(pathname: string) {\n    this.keyPrefix = pathname;\n  }\n\n  private getPageKey(key: string) {\n    return `${this.keyPrefix}-${key}`;\n  }\n\n  public set = (key: string, data: any = null): void => {\n    const pageKey = this.getPageKey(key);\n    LocalStorage.setItem(pageKey, JSON.stringify(data));\n    this.cachedKeys.push(key);\n  };\n\n  public get = <Result>(key: string): Result | null => {\n    const pageKey = this.getPageKey(key);\n    return JSON.parse(LocalStorage.getItem(pageKey) ?? \"null\");\n  };\n\n  public remove = (key: string): void => {\n    const pageKey = this.getPageKey(key);\n    LocalStorage.removeItem(pageKey);\n    this.cachedKeys = this.cachedKeys.filter((k) => k !== key);\n  };\n\n  public clearAll = () => {\n    this.cachedKeys.forEach((key) => this.remove(key));\n    this.cachedKeys = [];\n  };\n}\n","export function isStorageSupported(type: string): boolean {\n  try {\n    const storage = (window as { [key: string]: any })[type];\n    const testKey = \"__storage_test__\";\n\n    storage.setItem(testKey, \"1\");\n    storage.removeItem(testKey);\n\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\n// Wrapper class for storage\nexport class MemoryStorage {\n  public storage: { [x: string]: string } = {};\n\n  public setItem = (key: string, data: string): void => {\n    const json = (data && data.toString()) || \"\";\n\n    this.storage[key] = json;\n  };\n\n  public getItem = (key: string): string | null => this.storage[key] || \"\";\n\n  public removeItem = (key: string): void => {\n    delete this.storage[key];\n  };\n\n  public clear = () => {\n    this.storage = new MemoryStorage().storage;\n  };\n}\n\nexport const LocalStorage = isStorageSupported(\"localStorage\")\n  ? window.localStorage\n  : new MemoryStorage();\n\nexport const SessionStorage = isStorageSupported(\"sessionStorage\")\n  ? window.sessionStorage\n  : new MemoryStorage();\n","import {\n  T_ConversionRates,\n  T_FavoriteCodes,\n  T_FavoritesWithValue\n} from \"components/UnitConverter/types\";\nimport { round, toNumber } from \"helpers/number\";\nimport { T_StringOrNumber } from \"types/common\";\nimport { T_ConversionFormulas } from \"types/tools/unitConverter\";\n\nexport function sanitizeNumericInput(value: string) {\n  return (\n    value\n      // allow only numbers (with/without decimal values)\n      .replace(/[^0-9.]/g, \"\")\n      // allow only one decimal\n      .replace(/(\\..*?)\\..*/g, \"$1\")\n      // allow leading zero only for decimal values\n      .replace(/^0(\\d)/, \"$1\")\n  );\n}\n\nexport function getDefaultFavorites(\n  favoriteCodes: T_FavoriteCodes\n): T_FavoritesWithValue {\n  return favoriteCodes.map((code) => ({ code, value: \"\" }));\n}\n\nexport function calcValueForFavorites({\n  favorites,\n  conversionRates,\n  conversionFormulas,\n  inputCode,\n  inputValue\n}: T_CalcValueForFavoritesFnParams): T_FavoritesWithValue {\n  return favorites.map((favItem) => ({\n    ...favItem,\n    value: calcValue({\n      conversionRates,\n      conversionFormulas,\n      inputCode,\n      targetCode: favItem.code,\n      inputValue\n    })\n  }));\n}\n\nexport function calcValue({\n  conversionRates,\n  conversionFormulas,\n  inputCode,\n  targetCode,\n  inputValue\n}: T_CalcValueFnParams): T_StringOrNumber {\n  if (conversionFormulas) {\n    return calcValueBasedOnFormula({\n      conversionFormulas,\n      inputCode,\n      targetCode,\n      inputValue\n    });\n  } else if (conversionRates) {\n    return calcValueBasedOnRatio({\n      conversionRates,\n      inputCode,\n      targetCode,\n      inputValue\n    });\n  } else {\n    return inputValue;\n  }\n}\n\n/**\n * Assume:\n *    base code (of master data): BBB\n *    input code: CCC\n *    input value: x\n *    target code: YYY\n *\n * and we know (from master data):\n *    1 BBB = n1 CCC\n *    1 BBB = n2 YYY\n *\n * then,\n *               1 CCC  =  (1 / n1) BBB\n *               x CCC  =  x * (1 / n1) BBB\n *    x * (1 / n1) BBB  =  n2 * x * (1 / n1) YYY\n *               x CCC  =  n2 * x * / n1 YYY\n */\nfunction calcValueBasedOnRatio({\n  conversionRates,\n  inputCode,\n  targetCode,\n  inputValue\n}: { conversionRates: T_ConversionRates } & T_CalcValueFnParams) {\n  const x = toNumber(inputValue);\n  const n1 = conversionRates[inputCode];\n  const n2 = conversionRates[targetCode];\n\n  return round((n2 * x) / n1);\n}\n\nfunction calcValueBasedOnFormula({\n  conversionFormulas,\n  inputCode,\n  targetCode,\n  inputValue\n}: { conversionFormulas: T_ConversionFormulas } & T_CalcValueFnParams) {\n  let targetValue: T_StringOrNumber = 0;\n\n  if (inputCode === conversionFormulas.baseUnitCode) {\n    return conversionFormulas.fromBaseTo[targetCode](inputValue);\n  }\n\n  targetValue = conversionFormulas.toBaseFrom[inputCode](inputValue);\n\n  if (targetCode === conversionFormulas.baseUnitCode) {\n    return targetValue;\n  } else {\n    return conversionFormulas.fromBaseTo[targetCode](targetValue);\n  }\n}\n\ntype T_CalcValueForFavoritesFnParams = Omit<\n  T_CalcValueFnParams,\n  \"targetCode\"\n> & {\n  favorites: T_FavoritesWithValue;\n};\n\ntype T_CalcValueFnParams = {\n  inputCode: string;\n  targetCode: string;\n  inputValue: T_StringOrNumber;\n  conversionRates?: T_ConversionRates;\n  conversionFormulas?: T_ConversionFormulas;\n};\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iterableToArray","unsupportedIterableToArray","TypeError","useElementHandlers","dispatch","pageCache","inputValueEl","useRef","targetValueEl","eventHandlers","useMemo","handleInputValueChange","event","E_UnitConverterActions","target","value","handleTargetValueChange","handleListItemAction","currentTarget","dataset","code","actionName","CONST_UNIT_CONVERTER","set","E_PageCacheKeys","current","focus","handleInputClearClick","handleTargetClearClick","handleInputTargetCodeSwapClick","inputCode","targetCode","useDefaults","defaults","location","useLocation","PageCache","pathname","get","favorites","getDefaultFavorites","favoriteCodes","createReducer","props","state","type","payload","conversionRates","conversionFormulas","conversionLogicProps","targetValue","calcValue","inputValue","calcValueForFavorites","newInputValue","sanitizedInputValue","sanitizeNumericInput","sanitizedTargetValue","favoritesArrWithoutPayloadItem","filter","favItem","length","E_UnitConverterListItemActions","toNumber","x","round","num","fractionDigits","toFixed","keyPrefix","cachedKeys","key","data","pageKey","getPageKey","LocalStorage","JSON","stringify","push","parse","remove","k","clearAll","forEach","this","isStorageSupported","storage","window","testKey","setItem","removeItem","error","MemoryStorage","json","toString","getItem","clear","localStorage","SessionStorage","sessionStorage","replace","map","baseUnitCode","fromBaseTo","toBaseFrom","calcValueBasedOnFormula","n1","n2","calcValueBasedOnRatio","_defineProperty","obj","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","apply","_objectSpread2","i","arguments","source","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}